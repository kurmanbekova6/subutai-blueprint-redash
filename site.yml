- hosts: all
  gather_facts: false
  remote_user: root
  tasks: 

    - name: Update
      raw: apt-get -y --allow-unauthenticated update || true

    - name: Ensure python is available
      raw: test -e /usr/bin/python || apt install -y --allow-unauthenticated python-minimal

    - name: Ensure python-apt is available
      raw: test -d /usr/share/python-apt || apt install -y --allow-unauthenticated python-apt

    - name: Upgrade
      raw: apt-get -y --allow-unauthenticated upgrade

- hosts: rd 
  remote_user: root
  vars:
      redash_version: 3.0.0.b3134
  tasks:

    - name: Install required debs
      apt: 
        name: "{{ item }}"
        state: present
        with_items:
            - python-pip
            - python-dev
            - nginx
            - curl
            - build-essential
            - pwgen
            - libffi-dev 
            - libssl-dev
            - default-libmysqlclient-dev
            - libpq-dev
            - freetds-dev
            - libsasl2-dev
            - postgresql
            - redis-server
            - supervisor

    - name: Create redash user
      user:
          name: redash
          system: yes

    - name: Create base redash directory
      file:
          path: /opt/redash
          state: directory
          owner: redash
          group: redash

    - name: Save environment settings
      file:
          src: env
          dest: /opt/redash/.env

    - name: Generate cookie secret for site
      shell: COOKIE_SECRET=$(pwgen -1s 32) && echo "export REDASH_COOKIE_SECRET=$COOKIE_SECRET" >> /opt/redash/.env

    - name: Get redash source
      get_url:
          src: "https://s3.amazonaws.com/redash-releases/redash.{{ redash_version }}.tar.gz"
          dest: /tmp/redash.tar.gz

    - name: Unarchieve redash
      unarchive:
          src:  /tmp/redash.tar.gz
          dest: /opt/redash/current
          remote_src: yes
          owner: redash
          group: redash

    - name: Install python dependencies
      pip:
          requirements: "{{ item }}"
          with_items:
              - /opt/redash/current/requirements.txt
              - /opt/redash/current/requirements_all_ds.txt

    - name: Create Database User
      postgresql_user:
          name: redash
          state: present

    - name: Create Database
      postgresql_db:
          name: redash
          owner: redash

    - name: Setup tables
      django_manage:
          app_path: /opt/redash/current
          command: "database create_tables"

    - name: Setup supervisor conf file
      file:
          src: supervisord.conf
          dest: /etc/supervisor/conf.d/redash.conf

    - name: Restart supervisor service
      service:
          name: supervisor
          state: restarted

    - name: Copy redash server file
      file:
          src: nginx_redash_site
          dest: /etc/nginx/sites-enabled/redash

    - name: Enable redash server
      file:
          remote_src: true
          src: /etc/nginx/sites-available/redash
          dest: /etc/nginx/sites-enabled/redash
          state: link

    - name: Restart nginx
      service:
          name: nginx
          state: restarted

